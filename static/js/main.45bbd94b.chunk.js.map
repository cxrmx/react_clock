{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleTimeString","timerId","setTimeout","name","props","this","setState","setInterval","date","console","log","prevProps","clearInterval","className","React","Component","randomName","Math","random","toFixed","App","visibleClock","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"iPAaaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,qBACjBC,QAASC,YAAW,cAAU,GAC9BC,KAAM,EAAKC,MAAMD,MAJrB,uDAOE,WAAqB,IAAD,OAClBE,KAAKC,SAAS,CACZL,QAASM,aAAY,WACnB,IAAMC,EAAa,IAAIT,KAGvBU,QAAQC,IAAIF,EAAKR,sBACjB,EAAKM,SAAS,CAAER,MAAM,IAAIC,MAAOC,yBAChC,SAfT,gCAmBE,SAAmBW,GACbA,EAAUR,OAASE,KAAKD,MAAMD,MAEhCM,QAAQC,IAAR,qCAA0CC,EAAUR,KAApD,eAA+DE,KAAKD,MAAMD,SAtBhF,kCA0BE,WACES,cAAcP,KAAKR,MAAMI,WA3B7B,oBA8BE,WACE,MAAuBI,KAAKR,MAApBC,EAAR,EAAQA,KAAMK,EAAd,EAAcA,KAEd,OACE,qCACE,oBAAGU,UAAU,OAAb,wBAEGV,KAEH,oBAAGU,UAAU,QAAb,0BAEG,IACAf,YA1CX,GAA2BgB,IAAMC,WCTjC,SAASC,IACP,OAAwB,IAAhBC,KAAKC,UAAgBC,QAAQ,GAGhC,IAAMC,EAAb,4MACEvB,MAAQ,CACNwB,cAAc,EACdlB,KAAMa,KAHV,4CAME,WAAU,IAAD,OACP,EAA+BX,KAAKR,MAA5BwB,EAAR,EAAQA,aAAclB,EAAtB,EAAsBA,KActB,OACE,sBAAKU,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,yBACA,8BACGQ,GAAgB,cAAC,EAAD,CAAOlB,KAAMA,MAGhC,sBAAKU,UAAU,UAAf,UACE,wBAAQS,KAAK,SAASC,QApBV,WAChB,EAAKjB,SAAS,CAAEe,cAAc,KAmB1B,wBACA,wBAAQC,KAAK,SAASC,QAjBV,WAChB,EAAKjB,SAAS,CAAEe,cAAc,KAgB1B,wBACA,wBAAQC,KAAK,SAASC,QAdZ,WACd,EAAKjB,SAAS,CAAEH,KAAMa,OAalB,uCA/BV,GAAyBF,IAAMC,WCL/BS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.45bbd94b.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  time: string;\n  timerId: NodeJS.Timer;\n  name: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date().toLocaleTimeString(),\n    timerId: setTimeout(() => {}, 0),\n    name: this.props.name,\n  };\n\n  componentDidMount() {\n    this.setState({\n      timerId: setInterval(() => {\n        const date: Date = new Date();\n\n        // eslint-disable-next-line no-console\n        console.log(date.toLocaleTimeString());\n        this.setState({ time: new Date().toLocaleTimeString() });\n      }, 1000),\n    });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timerId);\n  }\n\n  render() {\n    const { time, name } = this.state;\n\n    return (\n      <>\n        <p className=\"name\">\n          Clock name:\n          {name}\n        </p>\n        <p className=\"clock\">\n          current time:\n          {' '}\n          {time}\n        </p>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction randomName() {\n  return (Math.random() * 100).toFixed(6);\n}\n\nexport class App extends React.Component {\n  state = {\n    visibleClock: true,\n    name: randomName(),\n  };\n\n  render() {\n    const { visibleClock, name } = this.state;\n\n    const showClock = () => {\n      this.setState({ visibleClock: true });\n    };\n\n    const hideClock = () => {\n      this.setState({ visibleClock: false });\n    };\n\n    const setName = () => {\n      this.setState({ name: randomName() });\n    };\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">React clock</h1>\n        <div>\n          {visibleClock && <Clock name={name} />}\n        </div>\n\n        <div className=\"buttons\">\n          <button type=\"button\" onClick={showClock}>Show Clock</button>\n          <button type=\"button\" onClick={hideClock}>Hide Clock</button>\n          <button type=\"button\" onClick={setName}>Set random name</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}